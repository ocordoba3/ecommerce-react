{"version":3,"sources":["components/styles/animations.tsx","components/Filters/styles.tsx","components/Filters/Filters.tsx","components/Popup/styles.tsx","components/Popup/Popup.tsx","components/ProductCard/styles.tsx","components/ProductCard/ProductCard.tsx","components/ProductsList/styles.tsx","components/ProductsList/ProductsList.tsx","helpers/sortItems.tsx","helpers/filters.tsx","components/Products/styles.tsx","components/Products/Products.tsx","hooks/useWindowSize.tsx"],"names":["fadeInKeyFrame","keyframes","fadeOutKeyFrame","fadeIn","time","type","css","fadeOut","FiltersContainer","styled","aside","props","isLightMode","PRIMARY_COLOR","SECONDARY_COLOR","TERTIARY_COLOR","Filters","useSelector","state","ui","categoryFilter","priceRange","dispatch","useDispatch","handleAddFilter","arrayName","value","reducerName","find","x","newArray","filter","el","className","filtersByCategory","map","name","id","checked","includes","onChange","target","setCategoryFilters","filtersByPrice","setPriceRange","ContainerPopup","div","Popup","closePopup","setIsModalOpen","document","getElementById","style","display","onClick","ProductsCard","ProductCard","product","products","cart","useEffect","localStorage","setItem","JSON","stringify","bestseller","src","image","alt","item","setIsCartOpen","addToCart","price","ContainerProductsList","section","ContainerProducts","Pagination","ContainerNoItems","ProductsList","sortBy","paginatedItems","useState","pageCount","setPageCount","actualPage","setActualPage","loading","setLoading","length","array","sort","a","b","orderBy","sortType","order","toLowerCase","sortItems","category","filterByCategory","push","filterByPriceRange","addPaginatedItems","slice","Math","ceil","breakLabel","nextLabel","onPageChange","selected","scrollIntoView","behavior","handlePageClick","pageRangeDisplayed","previousLabel","marginPagesDisplayed","ProductsContainer","article","ProductsHeader","header","SortContainer","ProductsContent","Products","windowSize","width","height","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","handleSort","sortOrder","setSortyByFilters","size","title","defaultValue"],"mappings":"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","file":"static/js/6.d62595cc.chunk.js","sourcesContent":["import { keyframes, css } from 'styled-components';\r\n\r\nconst fadeInKeyFrame = keyframes`\r\n    from{\r\n        filter: blur(0.5rem);\r\n        opacity: 0;\r\n    }\r\n    to {\r\n        filter: blur(0);\r\n        opacity: 1;\r\n    }\r\n`\r\nconst fadeOutKeyFrame = keyframes`\r\n    from{\r\n        filter: blur(0);\r\n        opacity: 1;\r\n    }\r\n    to {\r\n        filter: blur(0.5rem);\r\n        opacity: 0;\r\n    }\r\n`\r\nexport const fadeIn = ({time = '1s', type='ease'}: any) => css`animation: ${time} ${fadeInKeyFrame} ${type};`;\r\nexport const fadeOut = ({time = '1s', type='ease'}: any) => css`animation: ${time} ${fadeOutKeyFrame} ${type};`;\r\n","import styled from \"styled-components\";\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR, TERTIARY_COLOR, ThemeTypes } from \"../../consts\";\r\n\r\nexport const FiltersContainer = styled.aside<ThemeTypes>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 20%;\r\n\r\n    .container {\r\n        display: block;\r\n        position: relative;\r\n        padding-left: 3.5rem;\r\n        margin-bottom: 1.2rem;\r\n        cursor: pointer;\r\n        font-size: 2.2rem;\r\n        -webkit-user-select: none;\r\n        -moz-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n    }\r\n\r\n    /* Hide the browser's default checkbox */\r\n    .container input {\r\n        position: absolute;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n        height: 0;\r\n        width: 0;\r\n    }\r\n\r\n    /* Create a custom checkbox */\r\n    .checkmark {\r\n        border: .1rem solid ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 2.5rem;\r\n        width: 2.5rem;\r\n        background-color: ${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR};\r\n    }\r\n\r\n    /* On mouse-over, add a grey background color */\r\n    .container:hover input ~ .checkmark {\r\n        background-color: #ccc;\r\n    }\r\n\r\n    /* When the checkbox is checked, add a blue background */\r\n    .container input:checked ~ .checkmark {\r\n        background-color: ${TERTIARY_COLOR};\r\n    }\r\n\r\n    /* Create the checkmark/indicator (hidden when not checked) */\r\n    .checkmark:after {\r\n        content: \"\";\r\n        position: absolute;\r\n        display: none;\r\n    }\r\n\r\n    /* Show the checkmark when checked */\r\n    .container input:checked ~ .checkmark:after {\r\n        display: block;\r\n    }\r\n\r\n    /* Style the checkmark/indicator */\r\n    .container .checkmark:after {\r\n        left: .9rem;\r\n        top: .5rem;\r\n        width: .5rem;\r\n        height: 1rem;\r\n        border: solid white;\r\n        border-width: 0 .3rem .3rem 0;\r\n        -webkit-transform: rotate(45deg);\r\n        -ms-transform: rotate(45deg);\r\n        transform: rotate(45deg);\r\n    }\r\n\r\n    hr {\r\n        margin-top: 0;\r\n        margin-bottom: 2rem;\r\n        border: 0.1rem solid #c2c2c2;\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n        width: 100%;\r\n        height: calc(100vh - 7rem);\r\n        padding: 2rem 3rem;\r\n        box-sizing: border-box;\r\n    }\r\n`","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filtersByCategory, filtersByPrice } from '../../consts';\r\nimport { priceRange, setCategoryFilters, setPriceRange } from '../../reducers/ui/uiSlice';\r\nimport { RootState } from '../../store/store';\r\nimport { FiltersContainer } from './styles';\r\n\r\nexport const Filters = () => {\r\n\r\n    const { categoryFilter, priceRange, isLightMode } = useSelector((state: RootState) => state.ui);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddFilter = (arrayName: any, value: string, reducerName: any) => {\r\n        if (arrayName.find((x: string) => x === value)) {\r\n            const newArray = arrayName.filter((el: string) => el !== value);\r\n            dispatch(reducerName(newArray));\r\n        } else {\r\n            dispatch(reducerName([...arrayName, value]));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FiltersContainer isLightMode={isLightMode} className=\"animate__animated animate__fadeIn\">\r\n            <h2>Category</h2>\r\n            {\r\n                filtersByCategory.map(filter => (\r\n                    <label key={filter.id} className=\"container\">{filter.name}\r\n                        <input aria-labelledby={filter.id} checked={categoryFilter.includes(filter.value)} type=\"checkbox\" value={filter.value}\r\n                            onChange={({ target }) => handleAddFilter(categoryFilter, target.value, setCategoryFilters)}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                    </label>\r\n                ))\r\n            }\r\n            <hr />\r\n            <h2>Price range</h2>\r\n            {\r\n                filtersByPrice.map(filter => (\r\n                    <label key={filter.id} className=\"container\">{filter.name}\r\n                        <input aria-labelledby={filter.id} checked={priceRange.includes(filter.value as priceRange)} type=\"checkbox\" value={filter.value}\r\n                            onChange={({ target }) => handleAddFilter(priceRange, target.value, setPriceRange)}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                    </label>\r\n                ))\r\n            }\r\n        </FiltersContainer>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR, ThemeTypes } from \"../../consts\";\r\n\r\nexport const ContainerPopup = styled.div<ThemeTypes>`\r\n    bottom: 0;\r\n    display: none;\r\n    left: 0;\r\n    height: calc(100% - 7rem);\r\n    position: fixed;\r\n    right: 0;\r\n    top: 0;\r\n    transition: opacity 500ms;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    width: 100vw;\r\n    z-index: 3;\r\n    box-sizing: border-box;\r\n\r\n    .popup {\r\n        background: ${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR};\r\n        border-radius: 0;\r\n        margin: 0;\r\n        position: relative;\r\n        transition: all 5s ease-in-out;\r\n    }\r\n\r\n    .popup .close {\r\n        color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        position: absolute;\r\n        right: 30px;\r\n        top: 20px;\r\n        transition: all 200ms;\r\n        z-index: 2;\r\n    }\r\n\r\n    .popup .close svg {\r\n        cursor: pointer;\r\n        height: 2rem;\r\n        stroke-width: 5rem;\r\n        width: 2rem;\r\n    }\r\n\r\n    .popup .close svg:hover {\r\n        color: #ccc;\r\n    }\r\n\r\n    .popup .buttons {\r\n        background-color: ${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR};\r\n        border-top: .4rem solid ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        display: flex;\r\n        height: 10rem;\r\n        justify-content: space-around;\r\n        left: 0;\r\n        padding-top: 1rem;\r\n        position: fixed;\r\n        width: 100%;\r\n        z-index: 1;\r\n    }\r\n\r\n    .popup .buttons .save,\r\n    .popup .buttons .clear {\r\n        width: 40%;\r\n    }\r\n\r\n    .popup .buttons .save button,\r\n    .popup .buttons .clear button {\r\n        border: none;\r\n        border-radius: 0;\r\n        font-size: 1.6rem;\r\n        font-weight: 500;\r\n        height: 50%;\r\n        padding: 1rem;\r\n        width: 100%;\r\n    }\r\n\r\n    .popup .buttons .save button {\r\n        background-color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        color: ${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR};\r\n    }\r\n\r\n    .popup .buttons .clear button {\r\n        background-color: ${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR};\r\n        border: .2rem solid ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n    }\r\n`","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Filters } from '../Filters/Filters';\r\nimport { setCategoryFilters, setIsModalOpen, setPriceRange } from '../../reducers/ui/uiSlice';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { ContainerPopup } from './styles';\r\nimport { RootState } from '../../store/store';\r\n\r\nexport const Popup = () => {\r\n    const dispatch = useDispatch();\r\n    const {isLightMode} = useSelector((state: RootState) => state.ui)\r\n\r\n    const closePopup = () => {\r\n        dispatch(setIsModalOpen(false));\r\n        (document.getElementById('filterPopup') as any).style.display = 'none';\r\n    }\r\n\r\n    const handleResetFilters = () => {\r\n        dispatch(setCategoryFilters([]));\r\n        dispatch(setPriceRange([]));\r\n    }\r\n\r\n\r\n    return (\r\n        <ContainerPopup isLightMode={isLightMode} id=\"filterPopup\">\r\n            <div className=\"popup\">\r\n                <div className=\"close\" onClick={() => closePopup()}><AiOutlineClose /></div>\r\n                <Filters />\r\n                <div className=\"buttons\">\r\n                    <div className=\"clear\">\r\n                        <button type=\"button\" onClick={() => handleResetFilters()}>CLEAR</button>\r\n                    </div>\r\n                    <div className=\"save\">\r\n                        <button type=\"button\" onClick={() => closePopup()}>SAVE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ContainerPopup>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR, ThemeTypes } from \"../../consts\";\r\nimport { fadeIn } from \"../styles/animations\";\r\n\r\nexport const ProductsCard = styled.div<ThemeTypes>`\r\n    margin: 0 auto 5rem auto;\r\n    width: 30%;\r\n\r\n    .imgContainer {\r\n        position: relative; \r\n        width: 100%;\r\n    }\r\n\r\n    .imgContainer .bestSeller {\r\n        background-color: ${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR};\r\n        color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        font-size: 2rem;\r\n        font-weight: 400;\r\n        left: 0;\r\n        position: absolute;\r\n        padding: 0.5rem 2rem;\r\n        top: 0;\r\n        z-index: 3;\r\n    }\r\n\r\n    .imgContainer img {\r\n        height: 40rem;\r\n        object-fit: cover;\r\n        overflow: hidden;\r\n        width: 100%;\r\n        z-index: 1;\r\n    }\r\n\r\n    .imgContainer .cartButton {\r\n        background-color: #c2c0c010;\r\n        backdrop-filter: blur(12px);\r\n        border: none;\r\n        border-radius: 0;\r\n        bottom: 0.3rem;\r\n        color: ${SECONDARY_COLOR};\r\n        cursor: pointer;\r\n        display: none;\r\n        font-size: 2.3rem;\r\n        font-weight: 500;\r\n        height: 100%;\r\n        left: 0;\r\n        padding: 1rem 2rem;\r\n        position: absolute;\r\n        text-align: center;\r\n        width: 100%;\r\n        z-index: 2;\r\n    }\r\n\r\n    .imgContainer:hover>.cartButton {\r\n        display: block;\r\n        ${fadeIn({})}\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n        font-size: 3rem;\r\n        margin: 0 0 5rem 0;\r\n        width: 100%;\r\n\r\n        .imgContainer .cartButton {\r\n            display: block;\r\n            height: auto;\r\n        }\r\n        \r\n    }\r\n`","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart } from '../../reducers/cart/cartSlice';\r\nimport { Product } from '../../reducers/products/productsSlice';\r\nimport { setIsCartOpen } from '../../reducers/ui/uiSlice';\r\nimport { RootState } from '../../store/store';\r\nimport { ProductsCard } from './styles';\r\n\r\nexport const ProductCard = (product: Product) => {\r\n\r\n    const { products } = useSelector((state: RootState) => state.cart);\r\n    const { isLightMode } = useSelector((state: RootState) => state.ui);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('yourCart', JSON.stringify(products));\r\n    }, [products])\r\n\r\n    const handleAdd = (item: Product) => {\r\n        dispatch(setIsCartOpen(true));\r\n        dispatch(addToCart(item));\r\n    }\r\n\r\n    return (\r\n        <ProductsCard isLightMode={isLightMode}>\r\n            <div className=\"imgContainer\">\r\n                {product.bestseller && <span className=\"bestSeller\">Best seller</span>}\r\n                <img src={product.image.src} alt={product.image.alt} />\r\n                <button type=\"button\" className=\"cartButton\" onClick={() => handleAdd(product)}>ADD TO CART</button>\r\n            </div>\r\n            <h2>{product.name}</h2>\r\n            <h3>${product.price}</h3>\r\n        </ProductsCard>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR, TERTIARY_COLOR, ThemeTypes } from \"../../consts\";\r\n\r\nexport const ContainerProductsList = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 70%;\r\n\r\n    @media screen and (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const ContainerProducts = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n\r\n    @media screen and (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const Pagination = styled.div<ThemeTypes>`\r\n    width: 100%;\r\n\r\n    ul {\r\n        padding: 2rem 4rem;\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        justify-content: center;\r\n    }\r\n\r\n    ul li {\r\n        color: lighten(${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR});\r\n        cursor: pointer;\r\n        font-size: 2.9rem;\r\n        list-style: none;\r\n        margin: 0 1.5rem;\r\n        font-weight: 400;\r\n    }\r\n\r\n    ul li a[aria-current=\"page\"] {\r\n        color: ${TERTIARY_COLOR};\r\n        font-weight: 700;\r\n    }\r\n`\r\n\r\nexport const ContainerNoItems = styled.div`\r\n    display: grid;\r\n    height: 80%;\r\n    place-items: center;\r\n`","import React, { useEffect, useState } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterByCategory, filterByPriceRange } from '../../helpers/filters';\r\nimport { sortItems } from '../../helpers/sortItems';\r\nimport { addPaginatedItems, Product } from '../../reducers/products/productsSlice';\r\nimport { RootState } from '../../store/store';\r\nimport { ProductCard } from '../ProductCard/ProductCard';\r\nimport { ContainerNoItems, ContainerProducts, ContainerProductsList, Pagination } from './styles';\r\n\r\nconst ProductsList = () => {    \r\n    const dispatch = useDispatch();\r\n    const { sortBy, categoryFilter, priceRange, isLightMode } = useSelector((state: RootState) => state.ui);\r\n    const { products, paginatedItems } = useSelector((state: RootState) => state.products);\r\n    const itemsPerPage = 6;\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [actualPage, setActualPage] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (products && products.length > 0) {\r\n            let newArray = [...products];\r\n            newArray = sortItems(newArray, sortBy);\r\n\r\n            if (categoryFilter.length > 0) {\r\n                newArray = filterByCategory(newArray, categoryFilter);\r\n            }\r\n            if (priceRange.length > 0) {\r\n                newArray = filterByPriceRange(newArray, priceRange);\r\n            }\r\n            dispatch(addPaginatedItems(newArray.slice(actualPage * itemsPerPage, (actualPage + 1) * itemsPerPage)));\r\n            setPageCount(Math.ceil(newArray.length / itemsPerPage));\r\n            setLoading(false);\r\n        }\r\n    }, [categoryFilter, dispatch, products, itemsPerPage, priceRange, sortBy, actualPage]);\r\n\r\n    const handlePageClick = (selected: number) => {\r\n        setActualPage(selected);\r\n        document.getElementById('elementToScroll')?.scrollIntoView({behavior: \"smooth\"});\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"container-pagination animate__animated animate__fadeIn\">\r\n                <div className=\"containerInfo\">\r\n                    <h1>Loading...</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ContainerProductsList className=\"animate__animated animate__fadeIn\">\r\n            {\r\n                paginatedItems.length > 0\r\n                &&\r\n                <ContainerProducts>\r\n                    {\r\n                        paginatedItems.map((item: Product) => (\r\n                            <ProductCard key={item.id} {...item} />\r\n                        ))\r\n                    }\r\n                </ContainerProducts>\r\n            }\r\n            {\r\n                paginatedItems.length === 0\r\n                &&\r\n                <ContainerNoItems>\r\n                    <h1>No items found</h1>\r\n                </ContainerNoItems>\r\n            }\r\n            <Pagination isLightMode={isLightMode}>\r\n                <ReactPaginate\r\n                    breakLabel=\"...\"\r\n                    nextLabel={((actualPage + 1) / pageCount) === 1 ? \"\" : \">\"}\r\n                    onPageChange={({ selected }) => handlePageClick(selected)}\r\n                    pageRangeDisplayed={3}\r\n                    pageCount={pageCount}\r\n                    previousLabel={actualPage !== 0 ? \"<\" : \"\"}\r\n                    marginPagesDisplayed={3}\r\n                />\r\n            </Pagination>\r\n        </ ContainerProductsList>\r\n    );\r\n}\r\nexport default ProductsList;","import { Product } from \"../reducers/products/productsSlice\";\r\nimport { sortOrder, sortType } from \"../reducers/ui/uiSlice\";\r\n\r\nexport const sortItems = (array: Array<Product>, sortBy: [sortOrder, sortType]) => {\r\n    return array.sort((a, b) => {\r\n        const orderBy = sortBy[0];\r\n        const sortType = sortBy[1];\r\n        let order = (orderBy === 'asc') ? 1 : -1;\r\n        if (sortType === 'name') {\r\n            return (\r\n                a[sortType].toLowerCase() < b[sortType].toLowerCase()\r\n                    ? -1 * order : 1 * order\r\n            )\r\n        } else {\r\n            return (\r\n                a[sortType] < b[sortType]\r\n                    ? -1 * order : 1 * order\r\n            )\r\n        }\r\n    });\r\n}","import { Product } from \"../reducers/products/productsSlice\"\r\nimport { priceRange } from \"../reducers/ui/uiSlice\"\r\n\r\nexport const filterByCategory = (array: Array<Product>, categoryFilter: Array<string>) => {\r\n    return array.filter((item: Product) => categoryFilter.includes(item.category) ? item : null)\r\n}\r\n\r\nexport const filterByPriceRange = (array: Array<Product>, priceRange: Array<priceRange>) => {\r\n    let newArray: Array<Product> = [];\r\n    for (const range of priceRange) {\r\n        switch (range) {\r\n            case 'low20':\r\n                newArray.push(...array.filter((item: Product) => item.price <= 20));\r\n                break;\r\n            case '20-100':\r\n                newArray.push(...array.filter((item: Product) => item.price > 20 && item.price <= 100));\r\n                break;\r\n            case '100-200':\r\n                newArray.push(...array.filter((item: Product) => item.price > 100 && item.price <= 200));\r\n                break;\r\n            case 'more200':\r\n                newArray.push(...array.filter((item: Product) => item.price > 200));\r\n                break;\r\n        }\r\n    }\r\n    return newArray;\r\n}","import styled from \"styled-components\";\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR, ThemeTypes } from \"../../consts\";\r\n\r\nexport const ProductsContainer = styled.article`\r\n    margin: 6.8rem 9rem;\r\n    padding: 0;\r\n\r\n    @media screen and (max-width: 767px) {\r\n        margin: 0;\r\n        padding: 1.4rem;\r\n    }\r\n    \r\n    `\r\n\r\nexport const ProductsHeader = styled.header<ThemeTypes>`\r\n    margin-bottom: 6.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    & .filterMobile {\r\n        margin-left: auto;\r\n        display: none;\r\n        text-decoration: none;\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n        flex-wrap: wrap;\r\n        font-size: 1.8rem;\r\n        margin-bottom: 3rem;\r\n\r\n        & .filterMobile {\r\n            display: block;\r\n        }\r\n    }\r\n`\r\nexport const SortContainer = styled.div<ThemeTypes>`\r\n    color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n    font-size: 2.2rem;\r\n    font-weight: 400;\r\n    margin-left: auto;\r\n\r\n    & svg {\r\n        color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        cursor: pointer;\r\n        height: 1.5rem;\r\n        margin: 0 .5rem;\r\n        width: 1.5rem;\r\n    }\r\n\r\n    & select {\r\n        appearance: none;\r\n        background-color: transparent;\r\n        border: none;\r\n        border-radius: 0;\r\n        color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n        cursor: pointer;\r\n        font-size: 2.2rem;\r\n        margin-left: .5rem;\r\n        outline: none;\r\n        & option {\r\n            background-color: ${props => props.isLightMode ? PRIMARY_COLOR : SECONDARY_COLOR};\r\n            border: none;\r\n            color: ${props => props.isLightMode ? SECONDARY_COLOR : PRIMARY_COLOR};\r\n            font-size: 1.8rem;\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n        margin-top: 2rem;\r\n        margin-left: 0;\r\n        text-align: end;\r\n        width: 100%;\r\n    }\r\n`\r\nexport const ProductsContent = styled.section`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n`\r\n","// Required imports\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Hooks\r\nimport { useWindowSize } from '../../hooks/useWindowSize';\r\n// Store and reducers\r\nimport { RootState } from '../../store/store';\r\nimport { setIsModalOpen, setSortyByFilters, sortOrder, sortType } from '../../reducers/ui/uiSlice';\r\n// Components\r\nimport { Filters } from '../Filters/Filters';\r\nimport { Popup } from '../Popup/Popup';\r\nimport ProductsList from '../ProductsList/ProductsList';\r\nimport { FaSortAlphaDown, FaSortAlphaDownAlt } from 'react-icons/fa';\r\nimport { MdOutlineKeyboardArrowDown } from 'react-icons/md';\r\nimport { BiFilter } from 'react-icons/bi';\r\nimport { ProductsContainer, ProductsContent, ProductsHeader, SortContainer } from './styles';\r\n\r\nconst Products = () => {\r\n\r\n    const { sortBy, isLightMode } = useSelector((state: RootState) => state.ui);\r\n    const dispatch = useDispatch();\r\n    const windowSize = useWindowSize();\r\n\r\n    const openForm = () => {\r\n        dispatch(setIsModalOpen(true));\r\n        (document.getElementById('filterPopup') as any).style.display = 'block';\r\n    }\r\n\r\n    const handleSort = (sortOrder: sortOrder, sortType: sortType) => {\r\n        dispatch(setSortyByFilters([sortOrder, sortType]));\r\n    }\r\n\r\n    return (\r\n        <ProductsContainer>\r\n            <ProductsHeader isLightMode={isLightMode}>\r\n                <h1> Products </h1>\r\n                <BiFilter className=\"filterMobile\" size=\"2.9rem\" onClick={() => openForm()}></BiFilter>\r\n                <SortContainer isLightMode={isLightMode}>\r\n                    Sort by\r\n                    <select title=\"select\" defaultValue={sortBy[1]} onChange={({ target }: any) => handleSort(sortBy[0], target.value)}>\r\n                        <option value=\"name\">Name</option>\r\n                        <option value=\"price\">Price</option>\r\n                    </select>\r\n                    <MdOutlineKeyboardArrowDown></MdOutlineKeyboardArrowDown>\r\n                    {\r\n                        sortBy[0] === 'asc' ? <FaSortAlphaDown onClick={() => handleSort('desc', sortBy[1])} /> : <FaSortAlphaDownAlt onClick={() => handleSort('asc', sortBy[1])} />\r\n                    }\r\n                </SortContainer>\r\n            </ProductsHeader>\r\n            <ProductsContent>\r\n                {windowSize.width > 767 && <Filters />}\r\n                <ProductsList />\r\n            </ProductsContent>\r\n            <Popup></Popup>\r\n        </ProductsContainer>\r\n    )\r\n}\r\n\r\nexport default Products;","import { useEffect, useState } from 'react';\r\n\r\nexport const useWindowSize = () => {\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: 0,\r\n        height: 0,\r\n    });\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n        window.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n    return windowSize;\r\n}"],"sourceRoot":""}